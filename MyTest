import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.HashMap;
import java.util.Map;

public class RestApiClient {

    public static void main(String[] args) throws Exception {
        // Replace with your OAuth token endpoint
        String tokenEndpoint = "https://your-auth-server.com/oauth/token";
        String clientId = "your-client-id";
        String clientSecret = "your-client-secret";

        // Step 1: Get OAuth token
        String token = getOAuthToken(tokenEndpoint, clientId, clientSecret);
        System.out.println("OAuth Token: " + token);

        // Step 2: Call the REST API
        String apiEndpoint = "https://your-api.com/data";
        makeApiRequest(apiEndpoint, token);
    }

    private static String getOAuthToken(String tokenEndpoint, String clientId, String clientSecret) throws IOException, InterruptedException {
        String requestBody = "grant_type=client_credentials&client_id=" + clientId + "&client_secret=" + clientSecret;

        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(tokenEndpoint))
                .header("Content-Type", "application/x-www-form-urlencoded")
                .POST(HttpRequest.BodyPublishers.ofString(requestBody))
                .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        if (response.statusCode() == 200) {
            return parseJson(response.body(), "access_token");
        } else {
            throw new RuntimeException("Failed to get token: " + response.body());
        }
    }

    private static void makeApiRequest(String apiEndpoint, String token) throws IOException, InterruptedException {
        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(apiEndpoint))
                .header("Authorization", "Bearer " + token)
                .GET()
                .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        System.out.println("API Response: " + response.body());
    }

    private static String parseJson(String json, String key) {
        // Very simple manual JSON parsing
        String searchKey = "\"" + key + "\":\"";
        int startIndex = json.indexOf(searchKey) + searchKey.length();
        int endIndex = json.indexOf("\"", startIndex);
        return json.substring(startIndex, endIndex);
    }
}
