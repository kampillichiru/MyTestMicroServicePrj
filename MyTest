import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

import static org.springframework.security.config.Customizer.withDefaults;

@Configuration
public class SecurityConfig {

    @Bean
    public InMemoryUserDetailsManager userDetailsService() {
        UserDetails user = User.withDefaultPasswordEncoder()
                .username("admin")
                .password("password")
                .roles("ADMIN")
                .build();
        return new InMemoryUserDetailsManager(user);
    }

    @Bean
    public SecurityFilterChain consoleSecurityFilterChain(HttpSecurity http) throws Exception {
        http
            .securityMatcher("/ff4j-web-console/**") // Match the console path
            .authorizeHttpRequests(auth -> auth
                .anyRequest().hasRole("ADMIN") // Require ADMIN role for console
            )
            .formLogin(form -> form
                .loginPage("/login") // Optional: Specify a custom login page
                .permitAll() // Allow access to the login page
            )
            .httpBasic(withDefaults()); // Enable basic auth as a fallback

        return http.build();
    }
}
