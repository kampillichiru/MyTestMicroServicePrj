import org.apache.hc.core5.http.HttpRequest;
import org.apache.hc.core5.http.HttpRequestInterceptor;
import org.apache.hc.core5.http.protocol.HttpContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.ws.client.core.WebServiceTemplate;
import org.springframework.ws.transport.http.HttpComponentsMessageSender;
import org.apache.hc.client5.http.impl.classic.CloseableHttpClient;
import org.apache.hc.client5.http.impl.classic.HttpClients;

@Configuration
public class WebServiceConfig {

    @Bean
    public WebServiceTemplate webServiceTemplate() {
        WebServiceTemplate webServiceTemplate = new WebServiceTemplate();
        
        // Configure Apache HttpClient with custom headers
        CloseableHttpClient httpClient = HttpClients.custom()
            .addRequestInterceptorFirst((HttpRequest request, HttpContext context) -> {
                request.addHeader("Authorization", "Bearer my-token");
                request.addHeader("X-Custom-Header", "CustomValue");
            })
            .build();

        HttpComponentsMessageSender messageSender = new HttpComponentsMessageSender(httpClient);
        webServiceTemplate.setMessageSender(messageSender);

        return webServiceTemplate;
    }
}
